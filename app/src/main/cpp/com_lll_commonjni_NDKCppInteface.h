/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_lll_commonjni_NDKCppInteface */

#ifndef _Included_com_lll_commonjni_NDKCppInteface
#define _Included_com_lll_commonjni_NDKCppInteface
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_lll_commonjni_NDKCppInteface
 * Method:    executeCppConst
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_lll_commonjni_NDKCppInteface_executeCppConst
        (JNIEnv *, jobject);


/*
 * Class:     com_lll_commonjni_NDKCppInteface
 * Method:    executeCppFuncPointer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_lll_commonjni_NDKCppInteface_executeCppFuncPointer
        (JNIEnv *, jobject);


/*
 * Class:     com_lll_commonjni_NDKCppInteface
 * Method:    executeCppFuncPointer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_lll_commonjni_NDKCppInteface_executeCppClass
        (JNIEnv *, jobject);


/*
 * Class:     com_lll_commonjni_NDKCppInteface
 * Method:    executeCppFuncPointer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_lll_commonjni_NDKCppInteface_executeCppCopy
        (JNIEnv *, jobject);

/*
 * 对象属性的初始化
 * Class:     com_lll_commonjni_NDKCppInteface
 * Method:    initObjectAttribute
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_lll_commonjni_NDKCppInteface_initObjectAttribute
        (JNIEnv *, jobject);

/*
 * static 关键字
 * Class:     com_lll_commonjni_NDKCppInteface
 * Method:    executeStaticKey
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_lll_commonjni_NDKCppInteface_executeStaticKey
        (JNIEnv *, jobject); //

/*
 * static  指针和引用的区别
 * Class:     com_lll_commonjni_NDKCppInteface
 * Method:    executeStaticKey
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_lll_commonjni_NDKCppInteface_callCppPointerAndRefDiff
        (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
